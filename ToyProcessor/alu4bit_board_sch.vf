////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : alu4bit_board_sch.vf
// /___/   /\     Timestamp : 02/27/2017 20:01:56
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog "F:/EE 1202/ToyProcessor/alu4bit_board_sch.vf" -w "F:/EE 1202/ToyProcessor/alu4bit_board_sch.sch"
//Design Name: alu4bit_board_sch
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module G_MUSER_alu4bit_board_sch(d0, 
                                 d1, 
                                 d2, 
                                 d3, 
                                 g);

    input d0;
    input d1;
    input d2;
    input d3;
   output g;
   
   wire XLXN_6;
   wire XLXN_11;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   
   INV  XLXI_1 (.I(d3), 
               .O(XLXN_11));
   INV  XLXI_2 (.I(d2), 
               .O(XLXN_6));
   INV  XLXI_3 (.I(d1), 
               .O(XLXN_18));
   INV  XLXI_5 (.I(d0), 
               .O(XLXN_19));
   AND4  XLXI_6 (.I0(XLXN_19), 
                .I1(XLXN_18), 
                .I2(d2), 
                .I3(d3), 
                .O(XLXN_16));
   AND4  XLXI_7 (.I0(d0), 
                .I1(d1), 
                .I2(d2), 
                .I3(XLXN_11), 
                .O(XLXN_17));
   AND3  XLXI_8 (.I0(XLXN_18), 
                .I1(XLXN_6), 
                .I2(XLXN_11), 
                .O(XLXN_15));
   OR3  XLXI_9 (.I0(XLXN_17), 
               .I1(XLXN_16), 
               .I2(XLXN_15), 
               .O(g));
endmodule
`timescale 1ns / 1ps

module F_MUSER_alu4bit_board_sch(d0, 
                                 d1, 
                                 d2, 
                                 d3, 
                                 f);

    input d0;
    input d1;
    input d2;
    input d3;
   output f;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_13;
   wire XLXN_14;
   
   INV  XLXI_1 (.I(d3), 
               .O(XLXN_5));
   INV  XLXI_2 (.I(d2), 
               .O(XLXN_6));
   AND3  XLXI_6 (.I0(d1), 
                .I1(XLXN_6), 
                .I2(XLXN_5), 
                .O(XLXN_13));
   AND4  XLXI_7 (.I0(d0), 
                .I1(d1), 
                .I2(d2), 
                .I3(XLXN_5), 
                .O(XLXN_14));
   OR2  XLXI_8 (.I0(XLXN_14), 
               .I1(XLXN_13), 
               .O(f));
endmodule
`timescale 1ns / 1ps

module E_MUSER_alu4bit_board_sch(d0, 
                                 d1, 
                                 d2, 
                                 d3, 
                                 e);

    input d0;
    input d1;
    input d2;
    input d3;
   output e;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   
   INV  XLXI_1 (.I(d3), 
               .O(XLXN_7));
   INV  XLXI_3 (.I(d2), 
               .O(XLXN_5));
   INV  XLXI_4 (.I(d1), 
               .O(XLXN_6));
   AND3  XLXI_6 (.I0(d0), 
                .I1(XLXN_6), 
                .I2(XLXN_5), 
                .O(XLXN_8));
   AND2  XLXI_7 (.I0(d0), 
                .I1(XLXN_7), 
                .O(XLXN_9));
   OR2  XLXI_8 (.I0(XLXN_9), 
               .I1(XLXN_8), 
               .O(e));
endmodule
`timescale 1ns / 1ps

module D_MUSER_alu4bit_board_sch(d0, 
                                 d1, 
                                 d2, 
                                 d3, 
                                 d);

    input d0;
    input d1;
    input d2;
    input d3;
   output d;
   
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_19;
   
   AND3  XLXI_1 (.I0(d0), 
                .I1(XLXN_7), 
                .I2(XLXN_6), 
                .O(XLXN_15));
   AND3  XLXI_2 (.I0(d0), 
                .I1(d1), 
                .I2(d2), 
                .O(XLXN_16));
   AND4  XLXI_3 (.I0(XLXN_19), 
                .I1(d1), 
                .I2(XLXN_6), 
                .I3(d3), 
                .O(XLXN_17));
   INV  XLXI_4 (.I(d3), 
               .O());
   INV  XLXI_5 (.I(d2), 
               .O(XLXN_6));
   INV  XLXI_6 (.I(d1), 
               .O(XLXN_7));
   INV  XLXI_7 (.I(d0), 
               .O(XLXN_19));
   OR3  XLXI_8 (.I0(XLXN_17), 
               .I1(XLXN_16), 
               .I2(XLXN_15), 
               .O(d));
endmodule
`timescale 1ns / 1ps

module C_MUSER_alu4bit_board_sch(d0, 
                                 d1, 
                                 d2, 
                                 d3, 
                                 c);

    input d0;
    input d1;
    input d2;
    input d3;
   output c;
   
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   
   AND3  XLXI_1 (.I0(d1), 
                .I1(d2), 
                .I2(d3), 
                .O(XLXN_15));
   AND4  XLXI_2 (.I0(XLXN_12), 
                .I1(d1), 
                .I2(XLXN_10), 
                .I3(XLXN_9), 
                .O(XLXN_14));
   AND4  XLXI_3 (.I0(XLXN_12), 
                .I1(XLXN_7), 
                .I2(d2), 
                .I3(d3), 
                .O(XLXN_13));
   INV  XLXI_8 (.I(d2), 
               .O(XLXN_10));
   INV  XLXI_9 (.I(d3), 
               .O(XLXN_9));
   INV  XLXI_11 (.I(d1), 
                .O(XLXN_7));
   INV  XLXI_12 (.I(d0), 
                .O(XLXN_12));
   OR3  XLXI_13 (.I0(XLXN_15), 
                .I1(XLXN_14), 
                .I2(XLXN_13), 
                .O(c));
endmodule
`timescale 1ns / 1ps

module B_MUSER_alu4bit_board_sch(d0, 
                                 d1, 
                                 d2, 
                                 d3, 
                                 f1);

    input d0;
    input d1;
    input d2;
    input d3;
   output f1;
   
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_17;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_24;
   
   AND4  XLXI_1 (.I0(XLXN_17), 
                .I1(XLXN_14), 
                .I2(d2), 
                .I3(d3), 
                .O(XLXN_20));
   AND4  XLXI_2 (.I0(d0), 
                .I1(XLXN_14), 
                .I2(d2), 
                .I3(XLXN_13), 
                .O(XLXN_21));
   AND3  XLXI_4 (.I0(XLXN_17), 
                .I1(d1), 
                .I2(d2), 
                .O(XLXN_22));
   AND3  XLXI_5 (.I0(d1), 
                .I1(d2), 
                .I2(d3), 
                .O(XLXN_24));
   INV  XLXI_26 (.I(d1), 
                .O(XLXN_14));
   INV  XLXI_27 (.I(d0), 
                .O(XLXN_17));
   INV  XLXI_29 (.I(d3), 
                .O(XLXN_13));
   OR4  XLXI_30 (.I0(XLXN_24), 
                .I1(XLXN_22), 
                .I2(XLXN_21), 
                .I3(XLXN_20), 
                .O(f1));
endmodule
`timescale 1ns / 1ps

module bin_to_7seghex_sch_MUSER_alu4bit_board_sch(d0, 
                                                  d1, 
                                                  d2, 
                                                  d3, 
                                                  ai, 
                                                  bi, 
                                                  ci, 
                                                  di, 
                                                  ei, 
                                                  fi, 
                                                  gi);

    input d0;
    input d1;
    input d2;
    input d3;
   output ai;
   output bi;
   output ci;
   output di;
   output ei;
   output fi;
   output gi;
   
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_57;
   wire XLXN_62;
   wire XLXN_73;
   wire XLXN_75;
   wire XLXN_78;
   wire XLXN_83;
   wire XLXN_85;
   wire XLXN_88;
   wire XLXN_101;
   wire XLXN_102;
   
   OR4  XLXI_5 (.I0(XLXN_83), 
               .I1(XLXN_78), 
               .I2(XLXN_75), 
               .I3(XLXN_73), 
               .O(ai));
   INV  XLXI_20 (.I(d3), 
                .O(XLXN_54));
   INV  XLXI_21 (.I(d2), 
                .O(XLXN_55));
   INV  XLXI_23 (.I(d0), 
                .O(XLXN_62));
   AND4  XLXI_24 (.I0(d0), 
                 .I1(XLXN_57), 
                 .I2(XLXN_55), 
                 .I3(XLXN_54), 
                 .O(XLXN_73));
   AND4  XLXI_25 (.I0(XLXN_62), 
                 .I1(XLXN_57), 
                 .I2(d2), 
                 .I3(XLXN_54), 
                 .O(XLXN_75));
   AND4  XLXI_26 (.I0(d0), 
                 .I1(d1), 
                 .I2(XLXN_55), 
                 .I3(d3), 
                 .O(XLXN_78));
   AND4  XLXI_27 (.I0(d0), 
                 .I1(XLXN_57), 
                 .I2(d2), 
                 .I3(d3), 
                 .O(XLXN_83));
   B_MUSER_alu4bit_board_sch  XLXI_33 (.d0(d0), 
                                      .d1(d1), 
                                      .d2(d2), 
                                      .d3(d3), 
                                      .f1(XLXN_85));
   C_MUSER_alu4bit_board_sch  XLXI_34 (.d0(d0), 
                                      .d1(d1), 
                                      .d2(d2), 
                                      .d3(d3), 
                                      .c(ci));
   OR2  XLXI_35 (.I0(XLXN_78), 
                .I1(XLXN_85), 
                .O(bi));
   D_MUSER_alu4bit_board_sch  XLXI_36 (.d0(d0), 
                                      .d1(d1), 
                                      .d2(d2), 
                                      .d3(d3), 
                                      .d(XLXN_101));
   OR2  XLXI_38 (.I0(XLXN_101), 
                .I1(XLXN_75), 
                .O(di));
   E_MUSER_alu4bit_board_sch  XLXI_39 (.d0(d0), 
                                      .d1(d1), 
                                      .d2(d2), 
                                      .d3(d3), 
                                      .e(XLXN_102));
   OR2  XLXI_40 (.I0(XLXN_102), 
                .I1(XLXN_75), 
                .O(ei));
   F_MUSER_alu4bit_board_sch  XLXI_41 (.d0(d0), 
                                      .d1(d1), 
                                      .d2(d2), 
                                      .d3(d3), 
                                      .f(XLXN_88));
   OR3  XLXI_44 (.I0(XLXN_88), 
                .I1(XLXN_73), 
                .I2(XLXN_83), 
                .O(fi));
   G_MUSER_alu4bit_board_sch  XLXI_45 (.d0(d0), 
                                      .d1(d1), 
                                      .d2(d2), 
                                      .d3(d3), 
                                      .g(gi));
   INV  XLXI_47 (.I(d1), 
                .O(XLXN_57));
endmodule
`timescale 1ns / 1ps

module D2_4E_MXILINX_alu4bit_board_sch(A0, 
                                       A1, 
                                       E, 
                                       D0, 
                                       D1, 
                                       D2, 
                                       D3);

    input A0;
    input A1;
    input E;
   output D0;
   output D1;
   output D2;
   output D3;
   
   
   AND3  I_36_30 (.I0(A1), 
                 .I1(A0), 
                 .I2(E), 
                 .O(D3));
   AND3B1  I_36_31 (.I0(A0), 
                   .I1(A1), 
                   .I2(E), 
                   .O(D2));
   AND3B1  I_36_32 (.I0(A1), 
                   .I1(A0), 
                   .I2(E), 
                   .O(D1));
   AND3B2  I_36_33 (.I0(A0), 
                   .I1(A1), 
                   .I2(E), 
                   .O(D0));
endmodule
`timescale 1ns / 1ps

module FTCE_MXILINX_alu4bit_board_sch(C, 
                                      CE, 
                                      CLR, 
                                      T, 
                                      Q);

   parameter INIT = 1'b0;
   
    input C;
    input CE;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDCE  I_36_35 (.C(C), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(TQ), 
                 .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module CB16CE_MXILINX_alu4bit_board_sch(C, 
                                        CE, 
                                        CLR, 
                                        CEO, 
                                        Q, 
                                        TC);

    input C;
    input CE;
    input CLR;
   output CEO;
   output [15:0] Q;
   output TC;
   
   wire T2;
   wire T3;
   wire T4;
   wire T5;
   wire T6;
   wire T7;
   wire T8;
   wire T9;
   wire T10;
   wire T11;
   wire T12;
   wire T13;
   wire T14;
   wire T15;
   wire XLXN_1;
   wire [15:0] Q_DUMMY;
   wire TC_DUMMY;
   
   assign Q[15:0] = Q_DUMMY[15:0];
   assign TC = TC_DUMMY;
   (* HU_SET = "I_Q0_1" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q0 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(XLXN_1), 
                                        .Q(Q_DUMMY[0]));
   (* HU_SET = "I_Q1_0" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q1 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(Q_DUMMY[0]), 
                                        .Q(Q_DUMMY[1]));
   (* HU_SET = "I_Q2_3" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q2 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(T2), 
                                        .Q(Q_DUMMY[2]));
   (* HU_SET = "I_Q3_2" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q3 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(T3), 
                                        .Q(Q_DUMMY[3]));
   (* HU_SET = "I_Q4_7" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q4 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(T4), 
                                        .Q(Q_DUMMY[4]));
   (* HU_SET = "I_Q5_6" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q5 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(T5), 
                                        .Q(Q_DUMMY[5]));
   (* HU_SET = "I_Q6_5" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q6 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(T6), 
                                        .Q(Q_DUMMY[6]));
   (* HU_SET = "I_Q7_4" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q7 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(T7), 
                                        .Q(Q_DUMMY[7]));
   (* HU_SET = "I_Q8_8" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q8 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(T8), 
                                        .Q(Q_DUMMY[8]));
   (* HU_SET = "I_Q9_9" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q9 (.C(C), 
                                        .CE(CE), 
                                        .CLR(CLR), 
                                        .T(T9), 
                                        .Q(Q_DUMMY[9]));
   (* HU_SET = "I_Q10_10" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q10 (.C(C), 
                                         .CE(CE), 
                                         .CLR(CLR), 
                                         .T(T10), 
                                         .Q(Q_DUMMY[10]));
   (* HU_SET = "I_Q11_11" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q11 (.C(C), 
                                         .CE(CE), 
                                         .CLR(CLR), 
                                         .T(T11), 
                                         .Q(Q_DUMMY[11]));
   (* HU_SET = "I_Q12_12" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q12 (.C(C), 
                                         .CE(CE), 
                                         .CLR(CLR), 
                                         .T(T12), 
                                         .Q(Q_DUMMY[12]));
   (* HU_SET = "I_Q13_13" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q13 (.C(C), 
                                         .CE(CE), 
                                         .CLR(CLR), 
                                         .T(T13), 
                                         .Q(Q_DUMMY[13]));
   (* HU_SET = "I_Q14_14" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q14 (.C(C), 
                                         .CE(CE), 
                                         .CLR(CLR), 
                                         .T(T14), 
                                         .Q(Q_DUMMY[14]));
   (* HU_SET = "I_Q15_15" *) 
   FTCE_MXILINX_alu4bit_board_sch #( .INIT(1'b0) ) I_Q15 (.C(C), 
                                         .CE(CE), 
                                         .CLR(CLR), 
                                         .T(T15), 
                                         .Q(Q_DUMMY[15]));
   AND3  I_36_3 (.I0(Q_DUMMY[2]), 
                .I1(Q_DUMMY[1]), 
                .I2(Q_DUMMY[0]), 
                .O(T3));
   AND2  I_36_4 (.I0(Q_DUMMY[1]), 
                .I1(Q_DUMMY[0]), 
                .O(T2));
   VCC  I_36_9 (.P(XLXN_1));
   AND4  I_36_10 (.I0(Q_DUMMY[3]), 
                 .I1(Q_DUMMY[2]), 
                 .I2(Q_DUMMY[1]), 
                 .I3(Q_DUMMY[0]), 
                 .O(T4));
   AND5  I_36_14 (.I0(Q_DUMMY[7]), 
                 .I1(Q_DUMMY[6]), 
                 .I2(Q_DUMMY[5]), 
                 .I3(Q_DUMMY[4]), 
                 .I4(T4), 
                 .O(T8));
   AND2  I_36_15 (.I0(Q_DUMMY[4]), 
                 .I1(T4), 
                 .O(T5));
   AND3  I_36_19 (.I0(Q_DUMMY[5]), 
                 .I1(Q_DUMMY[4]), 
                 .I2(T4), 
                 .O(T6));
   AND4  I_36_21 (.I0(Q_DUMMY[6]), 
                 .I1(Q_DUMMY[5]), 
                 .I2(Q_DUMMY[4]), 
                 .I3(T4), 
                 .O(T7));
   AND5  I_36_22 (.I0(Q_DUMMY[15]), 
                 .I1(Q_DUMMY[14]), 
                 .I2(Q_DUMMY[13]), 
                 .I3(Q_DUMMY[12]), 
                 .I4(T12), 
                 .O(TC_DUMMY));
   AND2  I_36_23 (.I0(Q_DUMMY[12]), 
                 .I1(T12), 
                 .O(T13));
   AND3  I_36_24 (.I0(Q_DUMMY[13]), 
                 .I1(Q_DUMMY[12]), 
                 .I2(T12), 
                 .O(T14));
   AND4  I_36_25 (.I0(Q_DUMMY[14]), 
                 .I1(Q_DUMMY[13]), 
                 .I2(Q_DUMMY[12]), 
                 .I3(T12), 
                 .O(T15));
   AND4  I_36_26 (.I0(Q_DUMMY[10]), 
                 .I1(Q_DUMMY[9]), 
                 .I2(Q_DUMMY[8]), 
                 .I3(T8), 
                 .O(T11));
   AND3  I_36_27 (.I0(Q_DUMMY[9]), 
                 .I1(Q_DUMMY[8]), 
                 .I2(T8), 
                 .O(T10));
   AND2  I_36_28 (.I0(Q_DUMMY[8]), 
                 .I1(T8), 
                 .O(T9));
   AND5  I_36_29 (.I0(Q_DUMMY[11]), 
                 .I1(Q_DUMMY[10]), 
                 .I2(Q_DUMMY[9]), 
                 .I3(Q_DUMMY[8]), 
                 .I4(T8), 
                 .O(T12));
   AND2  I_36_54 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module mux4_sch_MUSER_alu4bit_board_sch(c0, 
                                        c1, 
                                        in0, 
                                        in1, 
                                        in2, 
                                        in3, 
                                        mux_out);

    input c0;
    input c1;
    input in0;
    input in1;
    input in2;
    input in3;
   output mux_out;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   
   AND3  XLXI_1 (.I0(XLXN_6), 
                .I1(XLXN_7), 
                .I2(in0), 
                .O(XLXN_1));
   AND3  XLXI_2 (.I0(c0), 
                .I1(XLXN_7), 
                .I2(in1), 
                .O(XLXN_2));
   AND3  XLXI_3 (.I0(XLXN_6), 
                .I1(c1), 
                .I2(in2), 
                .O(XLXN_4));
   AND3  XLXI_4 (.I0(c0), 
                .I1(c1), 
                .I2(in3), 
                .O(XLXN_5));
   OR4  XLXI_5 (.I0(XLXN_5), 
               .I1(XLXN_4), 
               .I2(XLXN_2), 
               .I3(XLXN_1), 
               .O(mux_out));
   INV  XLXI_6 (.I(c0), 
               .O(XLXN_6));
   INV  XLXI_7 (.I(c1), 
               .O(XLXN_7));
endmodule
`timescale 1ns / 1ps

module mux4_7bit_sch_MUSER_alu4bit_board_sch(c0, 
                                             c1, 
                                             in0, 
                                             in1, 
                                             in2, 
                                             in3, 
                                             mux_out);

    input c0;
    input c1;
    input [6:0] in0;
    input [6:0] in1;
    input [6:0] in2;
    input [6:0] in3;
   output [6:0] mux_out;
   
   
   mux4_sch_MUSER_alu4bit_board_sch  XLXI_1 (.c0(c0), 
                                            .c1(c1), 
                                            .in0(in0[5]), 
                                            .in1(in1[5]), 
                                            .in2(in2[5]), 
                                            .in3(in3[5]), 
                                            .mux_out(mux_out[5]));
   mux4_sch_MUSER_alu4bit_board_sch  XLXI_2 (.c0(c0), 
                                            .c1(c1), 
                                            .in0(in0[6]), 
                                            .in1(in1[6]), 
                                            .in2(in2[6]), 
                                            .in3(in3[6]), 
                                            .mux_out(mux_out[6]));
   mux4_sch_MUSER_alu4bit_board_sch  XLXI_3 (.c0(c0), 
                                            .c1(c1), 
                                            .in0(in0[3]), 
                                            .in1(in1[3]), 
                                            .in2(in2[3]), 
                                            .in3(in3[3]), 
                                            .mux_out(mux_out[3]));
   mux4_sch_MUSER_alu4bit_board_sch  XLXI_4 (.c0(c0), 
                                            .c1(c1), 
                                            .in0(in0[4]), 
                                            .in1(in1[4]), 
                                            .in2(in2[4]), 
                                            .in3(in3[4]), 
                                            .mux_out(mux_out[4]));
   mux4_sch_MUSER_alu4bit_board_sch  XLXI_5 (.c0(c0), 
                                            .c1(c1), 
                                            .in0(in0[1]), 
                                            .in1(in1[1]), 
                                            .in2(in2[1]), 
                                            .in3(in3[1]), 
                                            .mux_out(mux_out[1]));
   mux4_sch_MUSER_alu4bit_board_sch  XLXI_6 (.c0(c0), 
                                            .c1(c1), 
                                            .in0(in0[2]), 
                                            .in1(in1[2]), 
                                            .in2(in2[2]), 
                                            .in3(in3[2]), 
                                            .mux_out(mux_out[2]));
   mux4_sch_MUSER_alu4bit_board_sch  XLXI_7 (.c0(c0), 
                                            .c1(c1), 
                                            .in0(in0[0]), 
                                            .in1(in1[0]), 
                                            .in2(in2[0]), 
                                            .in3(in3[0]), 
                                            .mux_out(mux_out[0]));
endmodule
`timescale 1ns / 1ps

module seven_seg_control_sch_MUSER_alu4bit_board_sch(CLK, 
                                                     L, 
                                                     ML, 
                                                     MR, 
                                                     R, 
                                                     EN_L, 
                                                     EN_ML, 
                                                     EN_MR, 
                                                     EN_R, 
                                                     seven_seg_out);

    input CLK;
    input [6:0] L;
    input [6:0] ML;
    input [6:0] MR;
    input [6:0] R;
   output EN_L;
   output EN_ML;
   output EN_MR;
   output EN_R;
   output [6:0] seven_seg_out;
   
   wire [15:0] Qout;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_22;
   wire XLXN_24;
   wire XLXN_26;
   
   mux4_7bit_sch_MUSER_alu4bit_board_sch  XLXI_1 (.c0(Qout[14]), 
                                                 .c1(Qout[15]), 
                                                 .in0(L[6:0]), 
                                                 .in1(ML[6:0]), 
                                                 .in2(MR[6:0]), 
                                                 .in3(R[6:0]), 
                                                 .mux_out(seven_seg_out[6:0]));
   (* HU_SET = "XLXI_2_16" *) 
   CB16CE_MXILINX_alu4bit_board_sch  XLXI_2 (.C(CLK), 
                                            .CE(XLXN_24), 
                                            .CLR(XLXN_22), 
                                            .CEO(), 
                                            .Q(Qout[15:0]), 
                                            .TC(XLXN_22));
   (* HU_SET = "XLXI_3_17" *) 
   D2_4E_MXILINX_alu4bit_board_sch  XLXI_3 (.A0(Qout[14]), 
                                           .A1(Qout[15]), 
                                           .E(XLXN_26), 
                                           .D0(XLXN_4), 
                                           .D1(XLXN_3), 
                                           .D2(XLXN_2), 
                                           .D3(XLXN_1));
   INV  XLXI_4 (.I(XLXN_4), 
               .O(EN_L));
   INV  XLXI_5 (.I(XLXN_3), 
               .O(EN_ML));
   INV  XLXI_6 (.I(XLXN_2), 
               .O(EN_MR));
   INV  XLXI_7 (.I(XLXN_1), 
               .O(EN_R));
   VCC  XLXI_15 (.P(XLXN_24));
   VCC  XLXI_16 (.P(XLXN_26));
endmodule
`timescale 1ns / 1ps

module fa_sch_MUSER_alu4bit_board_sch(Cprev, 
                                      X, 
                                      Y, 
                                      Cnext, 
                                      RES);

    input Cprev;
    input X;
    input Y;
   output Cnext;
   output RES;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_6;
   
   AND2  XLXI_1 (.I0(X), 
                .I1(Y), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(X), 
                .I1(Y), 
                .O(XLXN_3));
   OR2  XLXI_3 (.I0(XLXN_2), 
               .I1(XLXN_6), 
               .O(Cnext));
   AND2  XLXI_4 (.I0(XLXN_3), 
                .I1(Cprev), 
                .O(XLXN_6));
   XOR2  XLXI_5 (.I0(XLXN_3), 
                .I1(Cprev), 
                .O(RES));
endmodule
`timescale 1ns / 1ps

module arith_ext_MUSER_alu4bit_board_sch(bi, 
                                         M, 
                                         S0, 
                                         S1, 
                                         yi);

    input bi;
    input M;
    input S0;
    input S1;
   output yi;
   
   wire XLXN_5;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_14;
   wire XLXN_15;
   
   AND3  XLXI_1 (.I0(M), 
                .I1(XLXN_9), 
                .I2(bi), 
                .O(XLXN_14));
   AND3  XLXI_2 (.I0(M), 
                .I1(XLXN_5), 
                .I2(XLXN_10), 
                .O(XLXN_15));
   OR2  XLXI_3 (.I0(XLXN_14), 
               .I1(XLXN_15), 
               .O(yi));
   INV  XLXI_4 (.I(S0), 
               .O(XLXN_5));
   INV  XLXI_5 (.I(S1), 
               .O(XLXN_9));
   INV  XLXI_6 (.I(bi), 
               .O(XLXN_10));
endmodule
`timescale 1ns / 1ps

module logic_ext_MUSER_alu4bit_board_sch(ai, 
                                         bi, 
                                         M, 
                                         S0, 
                                         S1, 
                                         xi);

    input ai;
    input bi;
    input M;
    input S0;
    input S1;
   output xi;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_7;
   wire XLXN_15;
   wire XLXN_18;
   wire XLXN_20;
   wire XLXN_34;
   
   AND2  XLXI_1 (.I0(ai), 
                .I1(M), 
                .O(XLXN_7));
   AND2  XLXI_2 (.I0(ai), 
                .I1(S1), 
                .O(XLXN_5));
   AND3  XLXI_3 (.I0(S0), 
                .I1(ai), 
                .I2(bi), 
                .O(XLXN_4));
   AND4  XLXI_4 (.I0(XLXN_20), 
                .I1(S1), 
                .I2(S0), 
                .I3(bi), 
                .O(XLXN_3));
   AND4  XLXI_5 (.I0(XLXN_20), 
                .I1(XLXN_18), 
                .I2(XLXN_15), 
                .I3(XLXN_34), 
                .O(XLXN_2));
   OR5  XLXI_6 (.I0(XLXN_2), 
               .I1(XLXN_3), 
               .I2(XLXN_4), 
               .I3(XLXN_5), 
               .I4(XLXN_7), 
               .O(xi));
   INV  XLXI_7 (.I(S0), 
               .O(XLXN_15));
   INV  XLXI_8 (.I(S1), 
               .O(XLXN_18));
   INV  XLXI_9 (.I(M), 
               .O(XLXN_20));
   INV  XLXI_10 (.I(ai), 
                .O(XLXN_34));
endmodule
`timescale 1ns / 1ps

module alu4bit_sch_MUSER_alu4bit_board_sch(A, 
                                           B, 
                                           M, 
                                           S0, 
                                           S1, 
                                           CiOut, 
                                           F0, 
                                           F1, 
                                           F2, 
                                           F3);

    input [3:0] A;
    input [3:0] B;
    input M;
    input S0;
    input S1;
   output CiOut;
   output F0;
   output F1;
   output F2;
   output F3;
   
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_56;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   
   logic_ext_MUSER_alu4bit_board_sch  XLXI_1 (.ai(A[3]), 
                                             .bi(B[3]), 
                                             .M(M), 
                                             .S0(S0), 
                                             .S1(S1), 
                                             .xi(XLXN_18));
   logic_ext_MUSER_alu4bit_board_sch  XLXI_2 (.ai(A[2]), 
                                             .bi(B[2]), 
                                             .M(M), 
                                             .S0(S0), 
                                             .S1(S1), 
                                             .xi(XLXN_20));
   logic_ext_MUSER_alu4bit_board_sch  XLXI_3 (.ai(A[1]), 
                                             .bi(B[1]), 
                                             .M(M), 
                                             .S0(S0), 
                                             .S1(S1), 
                                             .xi(XLXN_22));
   logic_ext_MUSER_alu4bit_board_sch  XLXI_4 (.ai(A[0]), 
                                             .bi(B[0]), 
                                             .M(M), 
                                             .S0(S0), 
                                             .S1(S1), 
                                             .xi(XLXN_24));
   arith_ext_MUSER_alu4bit_board_sch  XLXI_5 (.bi(B[3]), 
                                             .M(M), 
                                             .S0(S0), 
                                             .S1(S1), 
                                             .yi(XLXN_19));
   arith_ext_MUSER_alu4bit_board_sch  XLXI_6 (.bi(B[2]), 
                                             .M(M), 
                                             .S0(S0), 
                                             .S1(S1), 
                                             .yi(XLXN_21));
   arith_ext_MUSER_alu4bit_board_sch  XLXI_7 (.bi(B[1]), 
                                             .M(M), 
                                             .S0(S0), 
                                             .S1(S1), 
                                             .yi(XLXN_23));
   arith_ext_MUSER_alu4bit_board_sch  XLXI_8 (.bi(B[0]), 
                                             .M(M), 
                                             .S0(S0), 
                                             .S1(S1), 
                                             .yi(XLXN_25));
   fa_sch_MUSER_alu4bit_board_sch  XLXI_10 (.Cprev(XLXN_58), 
                                           .X(XLXN_20), 
                                           .Y(XLXN_21), 
                                           .Cnext(XLXN_59), 
                                           .RES(F2));
   fa_sch_MUSER_alu4bit_board_sch  XLXI_11 (.Cprev(XLXN_57), 
                                           .X(XLXN_22), 
                                           .Y(XLXN_23), 
                                           .Cnext(XLXN_58), 
                                           .RES(F1));
   fa_sch_MUSER_alu4bit_board_sch  XLXI_12 (.Cprev(XLXN_56), 
                                           .X(XLXN_24), 
                                           .Y(XLXN_25), 
                                           .Cnext(XLXN_57), 
                                           .RES(F0));
   fa_sch_MUSER_alu4bit_board_sch  XLXI_13 (.Cprev(XLXN_59), 
                                           .X(XLXN_18), 
                                           .Y(XLXN_19), 
                                           .Cnext(CiOut), 
                                           .RES(F3));
   AND2  XLXI_14 (.I0(M), 
                 .I1(S1), 
                 .O(XLXN_56));
endmodule
`timescale 1ns / 1ps

module alu4bit_board_sch(A, 
                         B, 
                         CLK, 
                         M, 
                         S0, 
                         S1, 
                         Cout, 
                         EN_L, 
                         EN_ML, 
                         EN_MR, 
                         EN_R, 
                         F0, 
                         F1, 
                         F2, 
                         F3, 
                         SS);

    input [3:0] A;
    input [3:0] B;
    input CLK;
    input M;
    input S0;
    input S1;
   output Cout;
   output EN_L;
   output EN_ML;
   output EN_MR;
   output EN_R;
   output F0;
   output F1;
   output F2;
   output F3;
   output [6:0] SS;
   
   wire [6:0] L;
   wire [6:0] ML;
   wire [6:0] MR;
   wire [6:0] R;
   wire XLXN_31;
   wire F0_DUMMY;
   wire F1_DUMMY;
   wire F2_DUMMY;
   wire F3_DUMMY;
   
   assign F0 = F0_DUMMY;
   assign F1 = F1_DUMMY;
   assign F2 = F2_DUMMY;
   assign F3 = F3_DUMMY;
   bin_to_7seghex_sch_MUSER_alu4bit_board_sch  XLXI_1 (.d0(A[0]), 
                                                      .d1(A[1]), 
                                                      .d2(A[2]), 
                                                      .d3(A[3]), 
                                                      .ai(L[0]), 
                                                      .bi(L[1]), 
                                                      .ci(L[2]), 
                                                      .di(L[3]), 
                                                      .ei(L[4]), 
                                                      .fi(L[5]), 
                                                      .gi(L[6]));
   bin_to_7seghex_sch_MUSER_alu4bit_board_sch  XLXI_2 (.d0(S0), 
                                                      .d1(S1), 
                                                      .d2(M), 
                                                      .d3(XLXN_31), 
                                                      .ai(ML[0]), 
                                                      .bi(ML[1]), 
                                                      .ci(ML[2]), 
                                                      .di(ML[3]), 
                                                      .ei(ML[4]), 
                                                      .fi(ML[5]), 
                                                      .gi(ML[6]));
   bin_to_7seghex_sch_MUSER_alu4bit_board_sch  XLXI_3 (.d0(B[0]), 
                                                      .d1(B[1]), 
                                                      .d2(B[2]), 
                                                      .d3(B[3]), 
                                                      .ai(MR[0]), 
                                                      .bi(MR[1]), 
                                                      .ci(MR[2]), 
                                                      .di(MR[3]), 
                                                      .ei(MR[4]), 
                                                      .fi(MR[5]), 
                                                      .gi(MR[6]));
   bin_to_7seghex_sch_MUSER_alu4bit_board_sch  XLXI_4 (.d0(F0_DUMMY), 
                                                      .d1(F1_DUMMY), 
                                                      .d2(F2_DUMMY), 
                                                      .d3(F3_DUMMY), 
                                                      .ai(R[0]), 
                                                      .bi(R[1]), 
                                                      .ci(R[2]), 
                                                      .di(R[3]), 
                                                      .ei(R[4]), 
                                                      .fi(R[5]), 
                                                      .gi(R[6]));
   alu4bit_sch_MUSER_alu4bit_board_sch  XLXI_5 (.A(A[3:0]), 
                                               .B(B[3:0]), 
                                               .M(M), 
                                               .S0(S0), 
                                               .S1(S1), 
                                               .CiOut(Cout), 
                                               .F0(F0_DUMMY), 
                                               .F1(F1_DUMMY), 
                                               .F2(F2_DUMMY), 
                                               .F3(F3_DUMMY));
   seven_seg_control_sch_MUSER_alu4bit_board_sch  XLXI_6 (.CLK(CLK), 
                                                         .L(L[6:0]), 
                                                         .ML(ML[6:0]), 
                                                         .MR(MR[6:0]), 
                                                         .R(R[6:0]), 
                                                         .EN_L(EN_L), 
                                                         .EN_ML(EN_ML), 
                                                         .EN_MR(EN_MR), 
                                                         .EN_R(EN_R), 
                                                         
         .seven_seg_out(SS[6:0]));
   GND  XLXI_7 (.G(XLXN_31));
endmodule
